#!/usr/bin/env zsh

setopt ERREXIT
autoload -U colors && colors

if [[ $# -eq 0 ]]; then
  echo "Usage"
fi

command=$1

function run {
  if [[ $# -eq 0 ]]; then
    echo "Nope!" # TODO: Fix this message.
    exit -1
  fi
  environment=$1
  shift
  source $environment.env
  ./$environment.run $@
}

function list {
  for file in $(find . -iname '*.env'); do
    description=$(source $file && echo $RUN_DESCRIPTION)
    file=${file%.*}
    file=${file:2}
    file=${file:l}
    if [[ -z $description ]]; then
      echo $file
    else
      echo "$file - $description"
    fi
  done
}

function encrypt {
  password="$(cat propass)"
  for infile in $(find . -iname '*.env'); do
    outfile="${infile}.encrypted"
    openssl enc -aes-256-cbc -pbkdf2 -salt -in $infile -out $outfile -pass pass:"$password" 
  done
}

function decrypt {
  password="$(cat propass)"
  for infile in $(find . -iname '*.env.encrypted'); do
    outfile="${infile%.encrypted}"
    openssl enc -d -aes-256-cbc -pbkdf2 -salt -in $infile -out $outfile -pass pass:"$password" 
  done
}

function install {
  local source=$1;
  local target=$2;
  if ! [[ -d $target ]]; then
    echo "Install target must exist and must be a directory." >&2;
    exit -1;
  fi
  executable=${source:t}
  target=$target/$executable
  if [[ -f $target ]] && [[ $(realpath $source) = $(realpath $target)  ]]; then
    echo "Executable is already in place." >&2;
    exit -1;
  fi
  cp -fv $source $target;
}

case $command in
  :list)
    list
    ;;
  :encrypt)
    encrypt
    ;;
  :decrypt)
    decrypt
    ;;
  :install)
    shift
    install $0 ${1:-$HOME/bin}
    ;;
  :*)
    echo "Unknown command ${bold_color}$command{$reset_color}. Exiting." >&2
    exit -1
    ;;
  *)
    run $@
    ;;
esac